# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PokerDicesGUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtMultimedia
from threading import Thread
import sys, webbrowser, random, pickle
import PokerDices, PokerDicesRules


class PokerDicesGUI(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()

        # Window initialization
        self.setWindowTitle("Pokerove kostky")
        self.setFixedSize(1020, 600)
        self.setWindowIcon(QtGui.QIcon("icon.png"))

        try:
            loaded_settings = self.fn_loadSettings()
        except:
            loaded_settings = None


        ##################
        #   ICONS INIT   # 
        ##################

        self.blank_icon = QtGui.QIcon()
        self.blank_icon.addPixmap(QtGui.QPixmap("imgs/blank.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d1_icon_white = QtGui.QIcon()
        self.d1_icon_white.addPixmap(QtGui.QPixmap("imgs/d1_white.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d2_icon_white = QtGui.QIcon()
        self.d2_icon_white.addPixmap(QtGui.QPixmap("imgs/d2_white.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d3_icon_white = QtGui.QIcon()
        self.d3_icon_white.addPixmap(QtGui.QPixmap("imgs/d3_white.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d4_icon_white = QtGui.QIcon()
        self.d4_icon_white.addPixmap(QtGui.QPixmap("imgs/d4_white.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d5_icon_white = QtGui.QIcon()
        self.d5_icon_white.addPixmap(QtGui.QPixmap("imgs/d5_white.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d6_icon_white = QtGui.QIcon()
        self.d6_icon_white.addPixmap(QtGui.QPixmap("imgs/d6_white.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d1_icon_black = QtGui.QIcon()
        self.d1_icon_black.addPixmap(QtGui.QPixmap("imgs/d1_black.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d2_icon_black = QtGui.QIcon()
        self.d2_icon_black.addPixmap(QtGui.QPixmap("imgs/d2_black.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d3_icon_black = QtGui.QIcon()
        self.d3_icon_black.addPixmap(QtGui.QPixmap("imgs/d3_black.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d4_icon_black = QtGui.QIcon()
        self.d4_icon_black.addPixmap(QtGui.QPixmap("imgs/d4_black.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d5_icon_black = QtGui.QIcon()
        self.d5_icon_black.addPixmap(QtGui.QPixmap("imgs/d5_black.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.d6_icon_black = QtGui.QIcon()
        self.d6_icon_black.addPixmap(QtGui.QPixmap("imgs/d6_black.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)


        #################
        #   MENU INIT   #
        #################


        self.menubar = self.menuBar()


        self.actionNewGame = QtWidgets.QAction()
        self.actionNewGame.setText("Nova hra")
        self.actionNewGame.setShortcut("F2")
        self.actionNewGame.setToolTip("F2")
        self.menubar.addAction(self.actionNewGame)
        

        self.menuSettings = self.menubar.addMenu("Nastaveni")

        self.actionZmenit_jmeno_hrace_1 = QtWidgets.QAction()
        self.actionZmenit_jmeno_hrace_1.setText("Zmenit jmeno hrace 1")
        self.menuSettings.addAction(self.actionZmenit_jmeno_hrace_1)

        self.actionZmenit_jmeno_hrace_2 = QtWidgets.QAction()
        self.actionZmenit_jmeno_hrace_2.setText("Zmenit jmeno hrace 2")
        self.menuSettings.addAction(self.actionZmenit_jmeno_hrace_2)

        self.menuSettings.addSeparator()

        self.actionDruhy_hrac_je_pocitac = QtWidgets.QAction()
        self.actionDruhy_hrac_je_pocitac.setText("Druhy hrac je pocitac")
        self.actionDruhy_hrac_je_pocitac.setCheckable(True)
        self.actionDruhy_hrac_je_pocitac.setChecked(False) if loaded_settings is not None and not loaded_settings["2ndPlayerIsBot"] else self.actionDruhy_hrac_je_pocitac.setChecked(True)

        self.menuSettings.addAction(self.actionDruhy_hrac_je_pocitac)


        self.menuDifficulty = self.menuSettings.addMenu("Obtiznost")

        self.groupDifficulty = QtWidgets.QActionGroup(self)

        self.actionEasy = QtWidgets.QAction()
        self.actionEasy.setText("Chaoticky (easy?)")
        self.actionEasy.setCheckable(True)
        self.menuDifficulty.addAction(self.actionEasy)
        self.groupDifficulty.addAction(self.actionEasy)

        self.actionNormal = QtWidgets.QAction()
        self.actionNormal.setText("Normal")
        self.actionNormal.setCheckable(True)
        self.menuDifficulty.addAction(self.actionNormal)
        self.groupDifficulty.addAction(self.actionNormal)

        self.actionHard = QtWidgets.QAction()
        self.actionHard.setText("Hard")
        self.actionHard.setCheckable(True)
        self.menuDifficulty.addAction(self.actionHard)
        self.groupDifficulty.addAction(self.actionHard)

        self.menuDifficulty.addSeparator()

        self.actionAI = QtWidgets.QAction()
        self.actionAI.setText("AI")
        self.actionAI.setCheckable(True)
        self.menuDifficulty.addAction(self.actionAI)
        self.groupDifficulty.addAction(self.actionAI)

        self.menuDifficulty.setEnabled(False) if loaded_settings and not loaded_settings["2ndPlayerIsBot"] else self.menuDifficulty.setEnabled(True)

        if loaded_settings:
            if loaded_settings["difficulty"] == 1:
                self.actionEasy.setChecked(True) 
            elif loaded_settings["difficulty"] == 2:
                self.actionNormal.setChecked(True) 
            elif loaded_settings["difficulty"] == 3:
                self.actionHard.setChecked(True) 
            else:
                self.actionAI.setChecked(True) 
        else:
            self.actionEasy.setChecked(True) 

        self.menuSettings.addSeparator()

        self.actionSound = QtWidgets.QAction()
        self.actionSound.setText("Zvuky")
        self.actionSound.setCheckable(True)
        self.actionSound.setChecked(False) if loaded_settings is not None and not loaded_settings["soundON"] else self.actionSound.setChecked(True)
        self.menuSettings.addAction(self.actionSound)

        self.actionMusic = QtWidgets.QAction()
        self.actionMusic.setText("Hudba")
        self.actionMusic.setCheckable(True)
        self.actionMusic.setChecked(False) if loaded_settings is not None and not loaded_settings["musicON"] else self.actionMusic.setChecked(True)
        self.menuSettings.addAction(self.actionMusic)

        self.menuSettings.addSeparator()

        self.actionSaveSettings = QtWidgets.QAction()
        self.actionSaveSettings.setText("Ulozit nastaveni")
        self.menuSettings.addAction(self.actionSaveSettings)

        self.actionRules = QtWidgets.QAction()
        self.actionRules.setText("Pravidla")
        self.menubar.addAction(self.actionRules)


        self.actionExit = QtWidgets.QAction()
        self.actionExit.setText("Konec")
        self.menubar.addAction(self.actionExit)

        ####################
        #   CONTENT INIT   #
        ####################

        # Nadpis
        font = QtGui.QFont()
        font.setFamily("Imprint MT Shadow")
        font.setPointSize(50)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(True)
        self.title = QtWidgets.QLabel(self, font=font)
        self.title.setGeometry(QtCore.QRect(0, 20, 1000, 100))
        self.title.setAlignment(QtCore.Qt.AlignCenter)
        self.title.setText("Pokerove kostky")

        # Hlasatel
        font = QtGui.QFont()
        font.setFamily("Franklin Gothic Demi")
        font.setPointSize(12)
        self.announcement = QtWidgets.QLabel(self, font=font)
        self.announcement.setGeometry(QtCore.QRect(10, 100, 1000, 50))
        self.announcement.setText("Vitejte ve hre Pokerove kostky!")

        # R·meËek hr·Ëe 1
        self.frame_p1 = QtWidgets.QFrame(self)
        self.frame_p1.setGeometry(QtCore.QRect(10, 140, 500, 401))
        self.frame_p1.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_p1.setFrameShadow(QtWidgets.QFrame.Raised)

        # R·meËek hr·Ëe 2
        self.frame_p2 = QtWidgets.QFrame(self)
        self.frame_p2.setGeometry(QtCore.QRect(510, 140, 500, 401))
        self.frame_p2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_p2.setFrameShadow(QtWidgets.QFrame.Raised)

        # JmÈno hr·Ëe 1
        font = QtGui.QFont()
        font.setFamily("Lucida Sans Typewriter")
        font.setPointSize(20)
        self.p1_labelName = QtWidgets.QLabel(self.frame_p1, font=font)
        self.p1_labelName.setGeometry(QtCore.QRect(4, 5, 491, 61))
        self.p1_labelName.setAlignment(QtCore.Qt.AlignCenter)
        self.p1_labelName.setText(loaded_settings["p1Name"]) if loaded_settings else self.p1_labelName.setText(loaded_settings["Player 1"])

        # JmÈno hr·Ëe 2
        self.p2_labelName = QtWidgets.QLabel(self.frame_p2, font=font)
        self.p2_labelName.setGeometry(QtCore.QRect(4, 5, 491, 61))
        self.p2_labelName.setAlignment(QtCore.Qt.AlignCenter)
        self.p2_labelName.setText("Computer")

        # SÌla ruky hr·Ëe 1
        font = QtGui.QFont()
        font.setPointSize(12)
        self.p1_labelStrength = QtWidgets.QLabel(self.frame_p1, font=font)
        self.p1_labelStrength.setGeometry(QtCore.QRect(20, 210, 461, 31))
        self.p1_labelStrength.setText("Hand strength: ")

        # SÌla ruky hr·Ëe 2
        self.p2_labelStrength = QtWidgets.QLabel(self.frame_p2, font=font)
        self.p2_labelStrength.setGeometry(QtCore.QRect(20, 210, 461, 31))
        self.p2_labelStrength.setText("Hand strength: ")

        # Kostky hr·Ëe 1
        # 1
        self.p1_d1 = QtWidgets.QPushButton(self.frame_p1)
        self.p1_d1.setGeometry(QtCore.QRect(20, 70, 80, 80))
        self.p1_d1.setEnabled(False)
        self.p1_d1.setIcon(self.blank_icon)
        self.p1_d1.setIconSize(QtCore.QSize(80, 80))
        self.p1_d1.setCheckable(True)

        # 2
        self.p1_d2 = QtWidgets.QPushButton(self.frame_p1)
        self.p1_d2.setGeometry(QtCore.QRect(115, 70, 80, 80))
        self.p1_d2.setEnabled(False)
        self.p1_d2.setIcon(self.blank_icon)
        self.p1_d2.setIconSize(QtCore.QSize(80, 80))
        self.p1_d2.setCheckable(True)

        # 3
        self.p1_d3 = QtWidgets.QPushButton(self.frame_p1)
        self.p1_d3.setGeometry(QtCore.QRect(210, 70, 80, 80))
        self.p1_d3.setEnabled(False)
        self.p1_d3.setIcon(self.blank_icon)
        self.p1_d3.setIconSize(QtCore.QSize(80, 80))
        self.p1_d3.setCheckable(True)

        # 4
        self.p1_d4 = QtWidgets.QPushButton(self.frame_p1)
        self.p1_d4.setGeometry(QtCore.QRect(305, 70, 80, 80))
        self.p1_d4.setEnabled(False)
        self.p1_d4.setIcon(self.blank_icon)
        self.p1_d4.setIconSize(QtCore.QSize(80, 80))
        self.p1_d4.setCheckable(True)

        # 5
        self.p1_d5 = QtWidgets.QPushButton(self.frame_p1)
        self.p1_d5.setGeometry(QtCore.QRect(400, 70, 80, 80))
        self.p1_d5.setEnabled(False)
        self.p1_d5.setIcon(self.blank_icon)
        self.p1_d5.setIconSize(QtCore.QSize(80, 80))
        self.p1_d5.setCheckable(True)

        # Kostky hr·Ëe 2
        # 1
        self.p2_d1 = QtWidgets.QPushButton(self.frame_p2)
        self.p2_d1.setGeometry(QtCore.QRect(20, 70, 80, 80))
        self.p2_d1.setEnabled(False)
        self.p2_d1.setIcon(self.blank_icon)
        self.p2_d1.setIconSize(QtCore.QSize(80, 80))
        self.p2_d1.setCheckable(True)

        # 2
        self.p2_d2 = QtWidgets.QPushButton(self.frame_p2)
        self.p2_d2.setGeometry(QtCore.QRect(115, 70, 80, 80))
        self.p2_d2.setEnabled(False)
        self.p2_d2.setIcon(self.blank_icon)
        self.p2_d2.setIconSize(QtCore.QSize(80, 80))
        self.p2_d2.setCheckable(True)

        # 3
        self.p2_d3 = QtWidgets.QPushButton(self.frame_p2)
        self.p2_d3.setGeometry(QtCore.QRect(210, 70, 80, 80))
        self.p2_d3.setEnabled(False)
        self.p2_d3.setIcon(self.blank_icon)
        self.p2_d3.setIconSize(QtCore.QSize(80, 80))
        self.p2_d3.setCheckable(True)

        # 4
        self.p2_d4 = QtWidgets.QPushButton(self.frame_p2)
        self.p2_d4.setGeometry(QtCore.QRect(305, 70, 80, 80))
        self.p2_d4.setEnabled(False)
        self.p2_d4.setIcon(self.blank_icon)
        self.p2_d4.setIconSize(QtCore.QSize(80, 80))
        self.p2_d4.setCheckable(True)

        # 5
        self.p2_d5 = QtWidgets.QPushButton(self.frame_p2)
        self.p2_d5.setGeometry(QtCore.QRect(400, 70, 80, 80))
        self.p2_d5.setEnabled(False)
        self.p2_d5.setIcon(self.blank_icon)
        self.p2_d5.setIconSize(QtCore.QSize(80, 80))
        self.p2_d5.setCheckable(True)

        # TlaËÌtko hr·Ëe 1
        font = QtGui.QFont()
        font.setPointSize(12)
        self.p1_rollDices = QtWidgets.QPushButton(self.frame_p1, font=font)
        self.p1_rollDices.setGeometry(QtCore.QRect(10, 320, 481, 71))
        self.p1_rollDices.setEnabled(False)
        self.p1_rollDices.setText("Hodit kostky")

        # TlaËÌtko hr·Ëe 2
        self.p2_rollDices = QtWidgets.QPushButton(self.frame_p2, font=font)
        self.p2_rollDices.setGeometry(QtCore.QRect(10, 320, 481, 71))
        self.p2_rollDices.setEnabled(False)
        self.p2_rollDices.setText("Hodit kostky")

        # SkÛre
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.score = QtWidgets.QLabel(self, font=font)
        self.score.setGeometry(QtCore.QRect(450, 150, 120, 50))
        self.score.setAlignment(QtCore.Qt.AlignCenter)
        self.score.setText("0 : 0")

        ##########################
        #   SIGNAL CONNECTIONS   #
        ##########################


        # Inicializace konstant
        self.difficulty = loaded_settings["difficulty"] if loaded_settings else 1
        self.p1_score, self.p2_score = 0, 0
        self.soundON = self.actionSound.isChecked()
        self.musicON = self.actionMusic.isChecked()

        self.p1_rolledDices, self.p2_rolledDices = False, False

        kwargs = {'host': '127.0.0.1', 'port': 5000, 'threaded': True, 'use_reloader': False, 'debug': False}
        flaskThread = Thread(target=PokerDicesRules.app.run, daemon=True, kwargs=kwargs).start()

        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.fn_hraje_pocitac)
        self.timer.start(100)


        # Sign·ly menu
        self.actionNewGame.triggered.connect(self.fn_newGame)

        self.actionZmenit_jmeno_hrace_1.triggered.connect(self.fn_p1_rename)
        self.actionZmenit_jmeno_hrace_2.triggered.connect(self.fn_p2_rename)
        self.actionZmenit_jmeno_hrace_2.setEnabled(False)

        self.actionDruhy_hrac_je_pocitac.triggered.connect(self.fn_computerCheck)

        self.actionEasy.triggered.connect(lambda: self.fn_setDifficulty(1))
        self.actionNormal.triggered.connect(lambda: self.fn_setDifficulty(2))
        self.actionHard.triggered.connect(lambda: self.fn_setDifficulty(3))
        self.actionAI.triggered.connect(lambda: self.title.setText("Fuck you"))

        self.actionMusic.triggered.connect(self.fn_playMusic1)
        self.fn_playMusic1()

        self.actionSaveSettings.triggered.connect(self.fn_saveSettings)
        
        self.actionRules.triggered.connect(self.fn_rules)

        self.actionExit.triggered.connect(self.fn_exit)


        # Sign·ly tlaËÌtek
        self.p1_rollDices.clicked.connect(self.fn_p1_rollDices)
        self.p2_rollDices.clicked.connect(self.fn_p2_rollDices)

        self.p1_d1.clicked.connect(self.fn_p1_d1)
        self.p1_d2.clicked.connect(self.fn_p1_d2)
        self.p1_d3.clicked.connect(self.fn_p1_d3)
        self.p1_d4.clicked.connect(self.fn_p1_d4)
        self.p1_d5.clicked.connect(self.fn_p1_d5)

        self.p2_d1.clicked.connect(self.fn_p2_d1)
        self.p2_d2.clicked.connect(self.fn_p2_d2)
        self.p2_d3.clicked.connect(self.fn_p2_d3)
        self.p2_d4.clicked.connect(self.fn_p2_d4)
        self.p2_d5.clicked.connect(self.fn_p2_d5)       

        self.show()

    # Sign·l Nov· hra
    def fn_newGame(self):
        self.announcement.setText(f"Na rade je {self.p1_labelName.text()}")
        
        self.p1_rollDices.setEnabled(True)
        self.p2_rollDices.setEnabled(False)

        self.p1_rolledDices, self.p2_rolledDices = False, False
        self.p1_d1.setChecked(False)
        self.p1_d2.setChecked(False)
        self.p1_d3.setChecked(False)
        self.p1_d4.setChecked(False)
        self.p1_d5.setChecked(False)
        self.p2_d1.setChecked(False)
        self.p2_d2.setChecked(False)
        self.p2_d3.setChecked(False)
        self.p2_d4.setChecked(False)
        self.p2_d5.setChecked(False)
        
        self.p1_d1.setIcon(self.blank_icon)
        self.p1_d2.setIcon(self.blank_icon)
        self.p1_d3.setIcon(self.blank_icon)
        self.p1_d4.setIcon(self.blank_icon)
        self.p1_d5.setIcon(self.blank_icon)

        self.p2_d1.setIcon(self.blank_icon)
        self.p2_d2.setIcon(self.blank_icon)
        self.p2_d3.setIcon(self.blank_icon)
        self.p2_d4.setIcon(self.blank_icon)
        self.p2_d5.setIcon(self.blank_icon)

        self.p1_rollDices.clicked.disconnect()
        self.p1_rollDices.setText("Hodit kostky")
        self.p1_rollDices.clicked.connect(self.fn_p1_rollDices)

        self.p1_score = 0
        self.p2_score = 0
        self.score.setText(f"{self.p1_score} : {self.p2_score}")
        self.p1_labelStrength.setText("Hand strength: ")
        self.p2_labelStrength.setText("Hand strength: ")

        self.fn_playSound1()

    # Sign·l Hr·Ë 1 h·ûe kostkami
    def fn_p1_rollDices(self):
        self.fn_playSound1()

        # F·ze VymÏÚov·nÌ kostek
        if self.p1_rolledDices:     
            
            # H·zenÌ
            if self.p1_d1.isChecked():
                self.p1.roll_again(0)
            if self.p1_d2.isChecked():
                self.p1.roll_again(1)
            if self.p1_d3.isChecked():
                self.p1.roll_again(2)
            if self.p1_d4.isChecked():
                self.p1.roll_again(3)
            if self.p1_d5.isChecked():
                self.p1.roll_again(4)

            # Ozn·menÌ
            self.p1_labelStrength.setText(f"Hand strength: {self.p1.strength_name}")
            self.announcement.setText(f"Nove kostky hrace '{self.p1_labelName.text()}' jsou: {self.p1.dices[0]}, {self.p1.dices[1]}, {self.p1.dices[2]}, {self.p1.dices[3]} a {self.p1.dices[4]}. Nyni muze {self.p2_labelName.text()} znovu hodit kostkami dle jeho vyberu.")
            
            # DodateËnÈ ˙pravy prost¯edÌ
            self.p1_rollDices.setEnabled(False)
            self.p2_rollDices.setEnabled(True)

            self.p2_d1.setEnabled(True)
            self.p2_d2.setEnabled(True)
            self.p2_d3.setEnabled(True)
            self.p2_d4.setEnabled(True)
            self.p2_d5.setEnabled(True)

            self.p1_d1.setEnabled(False)
            self.p1_d2.setEnabled(False)
            self.p1_d3.setEnabled(False)
            self.p1_d4.setEnabled(False)
            self.p1_d5.setEnabled(False)
        
        # F·ze PrvnÌ hod kostek
        else:

            # H·zenÌ
            self.p1 = PokerDices.Player()
            
            # Ozn·menÌ
            self.p1_labelStrength.setText(f"Hand strength: {self.p1.strength_name}")
            self.announcement.setText(f"{self.p1_labelName.text()} hodil kostky {self.p1.dices[0]}, {self.p1.dices[1]}, {self.p1.dices[2]}, {self.p1.dices[3]} a {self.p1.dices[4]}. Na rade je {self.p2_labelName.text()}")
            self.p1_rollDices.setText("Hodit nove kostky")

            # DodateËnÈ ˙pravy prost¯edÌ
            self.p1_rolledDices = not self.p1_rolledDices
            self.p1_rollDices.setEnabled(False)
            self.p2_rollDices.setEnabled(True)
        
        # NastavenÌ ikon kostek v prost¯edÌ podle hozen˝ch kostek
        match self.p1.dices[0]:
            case 1:
                self.p1_d1.setIcon(self.d1_icon_white)
            case 2:
                self.p1_d1.setIcon(self.d2_icon_white)
            case 3:
                self.p1_d1.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d1.setIcon(self.d4_icon_white)
            case 5:
                self.p1_d1.setIcon(self.d5_icon_white)
            case 6:
                self.p1_d1.setIcon(self.d6_icon_white)

        match self.p1.dices[1]:
            case 1:
                self.p1_d2.setIcon(self.d1_icon_white)
            case 2:
                self.p1_d2.setIcon(self.d2_icon_white)
            case 3:
                self.p1_d2.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d2.setIcon(self.d4_icon_white)
            case 5:
                self.p1_d2.setIcon(self.d5_icon_white)
            case 6:
                self.p1_d2.setIcon(self.d6_icon_white)

        match self.p1.dices[2]:
            case 1:
                self.p1_d3.setIcon(self.d1_icon_white)
            case 2:
                self.p1_d3.setIcon(self.d2_icon_white)
            case 3:
                self.p1_d3.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d3.setIcon(self.d4_icon_white)
            case 5:
                self.p1_d3.setIcon(self.d5_icon_white)
            case 6:
                self.p1_d3.setIcon(self.d6_icon_white)

        match self.p1.dices[3]:
            case 1:
                self.p1_d4.setIcon(self.d1_icon_white)
            case 2:
                self.p1_d4.setIcon(self.d2_icon_white)
            case 3:
                self.p1_d4.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d4.setIcon(self.d4_icon_white)
            case 5:
                self.p1_d4.setIcon(self.d5_icon_white)
            case 6:
                self.p1_d4.setIcon(self.d6_icon_white)
            
        match self.p1.dices[4]:
            case 1:
                self.p1_d5.setIcon(self.d1_icon_white)
            case 2:
                self.p1_d5.setIcon(self.d2_icon_white)
            case 3:
                self.p1_d5.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d5.setIcon(self.d4_icon_white)
            case 5:
                self.p1_d5.setIcon(self.d5_icon_white)
            case 6:
                self.p1_d5.setIcon(self.d6_icon_white)
            
    # Sign·l Hr·Ë 2 h·ûe kostkami
    def fn_p2_rollDices(self, kostky=[False, False, False, False, False]):
        self.fn_playSound1()

        # F·ze VymÏÚov·nÌ kostek
        if self.p2_rolledDices:     

            # Oöet¯enÌ vstup˘
            if not isinstance(kostky, list):
                kostky = [False, False, False, False, False]

            # H·zenÌ
            if self.p2_d1.isChecked() or kostky[0]:
                self.p2.roll_again(0)
            if self.p2_d2.isChecked() or kostky[1]:
                self.p2.roll_again(1)
            if self.p2_d3.isChecked() or kostky[2]:
                self.p2.roll_again(2)
            if self.p2_d4.isChecked() or kostky[3]:
                self.p2.roll_again(3)
            if self.p2_d5.isChecked() or kostky[4]:
                self.p2.roll_again(4)

            # Ozn·menÌ
            self.announcement.setText(f"{self.p1_labelName.text()} hodil nove kostky!")
            self.p2_labelStrength.setText(f"Hand strength: {self.p2.strength_name}")

            # DodateËnÈ ˙pravy prost¯edÌ
            self.p2_rollDices.setEnabled(False)
            self.p2_d1.setEnabled(False)
            self.p2_d2.setEnabled(False)
            self.p2_d3.setEnabled(False)
            self.p2_d4.setEnabled(False)
            self.p2_d5.setEnabled(False)


            self.fn_end_round()

        # F·ze PrvnÌ hod kostek
        else:   
            
            # H·zenÌ
            self.p2 = PokerDices.Player()

            # Ozn·menÌ
            self.p2_labelStrength.setText(f"Hand strength: {self.p2.strength_name}")
            self.announcement.setText(f"{self.p2_labelName.text()} hodil kostky {self.p2.dices[0]}, {self.p2.dices[1]}, {self.p2.dices[2]}, {self.p2.dices[3]} a {self.p2.dices[4]}. {self.p1_labelName.text()} nyni muze znovu hodit kostkami dle jeho vyberu.")
            self.p2_rollDices.setText("Hodit nove kostky")
            
            # DodateËnÈ ˙pravy prost¯edÌ
            self.p2_rolledDices = not self.p2_rolledDices

            self.p2_rollDices.setEnabled(False)
            self.p1_rollDices.setEnabled(True)

            self.p1_d1.setEnabled(True)
            self.p1_d2.setEnabled(True)
            self.p1_d3.setEnabled(True)
            self.p1_d4.setEnabled(True)
            self.p1_d5.setEnabled(True)
        
        # NastavenÌ ikon kostek v prost¯edÌ podle hozen˝ch kostek
        match self.p2.dices[0]:
            case 1:
                self.p2_d1.setIcon(self.d1_icon_white)
            case 2:
                self.p2_d1.setIcon(self.d2_icon_white)
            case 3:
                self.p2_d1.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d1.setIcon(self.d4_icon_white)
            case 5:
                self.p2_d1.setIcon(self.d5_icon_white)
            case 6:
                self.p2_d1.setIcon(self.d6_icon_white)

        match self.p2.dices[1]:
            case 1:
                self.p2_d2.setIcon(self.d1_icon_white)
            case 2:
                self.p2_d2.setIcon(self.d2_icon_white)
            case 3:
                self.p2_d2.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d2.setIcon(self.d4_icon_white)
            case 5:
                self.p2_d2.setIcon(self.d5_icon_white)
            case 6:
                self.p2_d2.setIcon(self.d6_icon_white)

        match self.p2.dices[2]:
            case 1:
                self.p2_d3.setIcon(self.d1_icon_white)
            case 2:
                self.p2_d3.setIcon(self.d2_icon_white)
            case 3:
                self.p2_d3.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d3.setIcon(self.d4_icon_white)
            case 5:
                self.p2_d3.setIcon(self.d5_icon_white)
            case 6:
                self.p2_d3.setIcon(self.d6_icon_white)

        match self.p2.dices[3]:
            case 1:
                self.p2_d4.setIcon(self.d1_icon_white)
            case 2:
                self.p2_d4.setIcon(self.d2_icon_white)
            case 3:
                self.p2_d4.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d4.setIcon(self.d4_icon_white)
            case 5:
                self.p2_d4.setIcon(self.d5_icon_white)
            case 6:
                self.p2_d4.setIcon(self.d6_icon_white)
            
        match self.p2.dices[4]:
            case 1:
                self.p2_d5.setIcon(self.d1_icon_white)
            case 2:
                self.p2_d5.setIcon(self.d2_icon_white)
            case 3:
                self.p2_d5.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d5.setIcon(self.d4_icon_white)
            case 5:
                self.p2_d5.setIcon(self.d5_icon_white)
            case 6:
                self.p2_d5.setIcon(self.d6_icon_white)
            
    # Sign·ly p¯epÌn·nÌ barev kostek hr·Ëe 1
    def fn_p1_d1(self):
        self.fn_playSound1()

        match self.p1.dices[0]:
            case 1:
                self.p1_d1.setIcon(self.d1_icon_black) if self.p1_d1.isChecked() else self.p1_d1.setIcon(self.d1_icon_white)
            case 2:
                self.p1_d1.setIcon(self.d2_icon_black) if self.p1_d1.isChecked() else self.p1_d1.setIcon(self.d2_icon_white)
            case 3:
                self.p1_d1.setIcon(self.d3_icon_black) if self.p1_d1.isChecked() else self.p1_d1.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d1.setIcon(self.d4_icon_black) if self.p1_d1.isChecked() else self.p1_d1.setIcon(self.d4_icon_white)
            case 5:
                self.p1_d1.setIcon(self.d5_icon_black) if self.p1_d1.isChecked() else self.p1_d1.setIcon(self.d5_icon_white)
            case 6:
                self.p1_d1.setIcon(self.d6_icon_black) if self.p1_d1.isChecked() else self.p1_d1.setIcon(self.d6_icon_white)

    def fn_p1_d2(self):
        self.fn_playSound1()

        match self.p1.dices[1]:
            case 1:
                self.p1_d2.setIcon(self.d1_icon_black) if self.p1_d2.isChecked() else self.p1_d2.setIcon(self.d1_icon_white)
            case 2:                                    
                self.p1_d2.setIcon(self.d2_icon_black) if self.p1_d2.isChecked() else self.p1_d2.setIcon(self.d2_icon_white)
            case 3:                                        
                self.p1_d2.setIcon(self.d3_icon_black) if self.p1_d2.isChecked() else self.p1_d2.setIcon(self.d3_icon_white)
            case 4:                                         
                self.p1_d2.setIcon(self.d4_icon_black) if self.p1_d2.isChecked() else self.p1_d2.setIcon(self.d4_icon_white)
            case 5:                                       
                self.p1_d2.setIcon(self.d5_icon_black) if self.p1_d2.isChecked() else self.p1_d2.setIcon(self.d5_icon_white)
            case 6:                                              
                self.p1_d2.setIcon(self.d6_icon_black) if self.p1_d2.isChecked() else self.p1_d2.setIcon(self.d6_icon_white)

    def fn_p1_d3(self):
        self.fn_playSound1()

        match self.p1.dices[2]:
            case 1:
                self.p1_d3.setIcon(self.d1_icon_black) if self.p1_d3.isChecked() else self.p1_d3.setIcon(self.d1_icon_white)
            case 2:    
                self.p1_d3.setIcon(self.d2_icon_black) if self.p1_d3.isChecked() else self.p1_d3.setIcon(self.d2_icon_white)
            case 3:     
                self.p1_d3.setIcon(self.d3_icon_black) if self.p1_d3.isChecked() else self.p1_d3.setIcon(self.d3_icon_white)
            case 4:
                self.p1_d3.setIcon(self.d4_icon_black) if self.p1_d3.isChecked() else self.p1_d3.setIcon(self.d4_icon_white)
            case 5:     
                self.p1_d3.setIcon(self.d5_icon_black) if self.p1_d3.isChecked() else self.p1_d3.setIcon(self.d5_icon_white)
            case 6:     
                self.p1_d3.setIcon(self.d6_icon_black) if self.p1_d3.isChecked() else self.p1_d3.setIcon(self.d6_icon_white)

    def fn_p1_d4(self):
        self.fn_playSound1()

        match self.p1.dices[3]:
            case 1:
                self.p1_d4.setIcon(self.d1_icon_black) if self.p1_d4.isChecked() else self.p1_d4.setIcon(self.d1_icon_white)
            case 2:                                           
                self.p1_d4.setIcon(self.d2_icon_black) if self.p1_d4.isChecked() else self.p1_d4.setIcon(self.d2_icon_white)
            case 3:                                              
                self.p1_d4.setIcon(self.d3_icon_black) if self.p1_d4.isChecked() else self.p1_d4.setIcon(self.d3_icon_white)
            case 4:                                           
                self.p1_d4.setIcon(self.d4_icon_black) if self.p1_d4.isChecked() else self.p1_d4.setIcon(self.d4_icon_white)
            case 5:                                              
                self.p1_d4.setIcon(self.d5_icon_black) if self.p1_d4.isChecked() else self.p1_d4.setIcon(self.d5_icon_white)
            case 6:                                              
                self.p1_d4.setIcon(self.d6_icon_black) if self.p1_d4.isChecked() else self.p1_d4.setIcon(self.d6_icon_white)
    
    def fn_p1_d5(self):
        self.fn_playSound1()

        match self.p1.dices[4]:
            case 1:
                self.p1_d5.setIcon(self.d1_icon_black) if self.p1_d5.isChecked() else self.p1_d5.setIcon(self.d1_icon_white)
            case 2:   
                self.p1_d5.setIcon(self.d2_icon_black) if self.p1_d5.isChecked() else self.p1_d5.setIcon(self.d2_icon_white)
            case 3:    
                self.p1_d5.setIcon(self.d3_icon_black) if self.p1_d5.isChecked() else self.p1_d5.setIcon(self.d3_icon_white)
            case 4:   
                self.p1_d5.setIcon(self.d4_icon_black) if self.p1_d5.isChecked() else self.p1_d5.setIcon(self.d4_icon_white)
            case 5:     
                self.p1_d5.setIcon(self.d5_icon_black) if self.p1_d5.isChecked() else self.p1_d5.setIcon(self.d5_icon_white)
            case 6:     
                self.p1_d5.setIcon(self.d6_icon_black) if self.p1_d5.isChecked() else self.p1_d5.setIcon(self.d6_icon_white)

    # Sign·ly p¯epÌn·nÌ barev kostek hr·Ëe 2
    def fn_p2_d1(self):
        self.fn_playSound1()

        match self.p2.dices[0]:
            case 1:
                self.p2_d1.setIcon(self.d1_icon_black) if self.p2_d1.isChecked() else self.p2_d1.setIcon(self.d1_icon_white)
            case 2:
                self.p2_d1.setIcon(self.d2_icon_black) if self.p2_d1.isChecked() else self.p2_d1.setIcon(self.d2_icon_white)
            case 3:
                self.p2_d1.setIcon(self.d3_icon_black) if self.p2_d1.isChecked() else self.p2_d1.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d1.setIcon(self.d4_icon_black) if self.p2_d1.isChecked() else self.p2_d1.setIcon(self.d4_icon_white)
            case 5:
                self.p2_d1.setIcon(self.d5_icon_black) if self.p2_d1.isChecked() else self.p2_d1.setIcon(self.d5_icon_white)
            case 6:
                self.p2_d1.setIcon(self.d6_icon_black) if self.p2_d1.isChecked() else self.p2_d1.setIcon(self.d6_icon_white)

    def fn_p2_d2(self):
        self.fn_playSound1()

        match self.p2.dices[1]:
            case 1:
                self.p2_d2.setIcon(self.d1_icon_black) if self.p2_d2.isChecked() else self.p2_d2.setIcon(self.d1_icon_white)
            case 2:                                    
                self.p2_d2.setIcon(self.d2_icon_black) if self.p2_d2.isChecked() else self.p2_d2.setIcon(self.d2_icon_white)
            case 3:                                        
                self.p2_d2.setIcon(self.d3_icon_black) if self.p2_d2.isChecked() else self.p2_d2.setIcon(self.d3_icon_white)
            case 4:                                         
                self.p2_d2.setIcon(self.d4_icon_black) if self.p2_d2.isChecked() else self.p2_d2.setIcon(self.d4_icon_white)
            case 5:                                       
                self.p2_d2.setIcon(self.d5_icon_black) if self.p2_d2.isChecked() else self.p2_d2.setIcon(self.d5_icon_white)
            case 6:                                              
                self.p2_d2.setIcon(self.d6_icon_black) if self.p2_d2.isChecked() else self.p2_d2.setIcon(self.d6_icon_white)

    def fn_p2_d3(self):
        self.fn_playSound1()

        match self.p2.dices[2]:
            case 1:
                self.p2_d3.setIcon(self.d1_icon_black) if self.p2_d3.isChecked() else self.p2_d3.setIcon(self.d1_icon_white)
            case 2:    
                self.p2_d3.setIcon(self.d2_icon_black) if self.p2_d3.isChecked() else self.p2_d3.setIcon(self.d2_icon_white)
            case 3:     
                self.p2_d3.setIcon(self.d3_icon_black) if self.p2_d3.isChecked() else self.p2_d3.setIcon(self.d3_icon_white)
            case 4:
                self.p2_d3.setIcon(self.d4_icon_black) if self.p2_d3.isChecked() else self.p2_d3.setIcon(self.d4_icon_white)
            case 5:     
                self.p2_d3.setIcon(self.d5_icon_black) if self.p2_d3.isChecked() else self.p2_d3.setIcon(self.d5_icon_white)
            case 6:     
                self.p2_d3.setIcon(self.d6_icon_black) if self.p2_d3.isChecked() else self.p2_d3.setIcon(self.d6_icon_white)

    def fn_p2_d4(self):
        self.fn_playSound1()

        match self.p2.dices[3]:
            case 1:
                self.p2_d4.setIcon(self.d1_icon_black) if self.p2_d4.isChecked() else self.p2_d4.setIcon(self.d1_icon_white)
            case 2:                                    
                self.p2_d4.setIcon(self.d2_icon_black) if self.p2_d4.isChecked() else self.p2_d4.setIcon(self.d2_icon_white)
            case 3:                                            
                self.p2_d4.setIcon(self.d3_icon_black) if self.p2_d4.isChecked() else self.p2_d4.setIcon(self.d3_icon_white)
            case 4:                                            
                self.p2_d4.setIcon(self.d4_icon_black) if self.p2_d4.isChecked() else self.p2_d4.setIcon(self.d4_icon_white)
            case 5:                                              
                self.p2_d4.setIcon(self.d5_icon_black) if self.p2_d4.isChecked() else self.p2_d4.setIcon(self.d5_icon_white)
            case 6:                                             
                self.p2_d4.setIcon(self.d6_icon_black) if self.p2_d4.isChecked() else self.p2_d4.setIcon(self.d6_icon_white)
    
    def fn_p2_d5(self):
        self.fn_playSound1()

        match self.p2.dices[4]:
            case 1:
                self.p2_d5.setIcon(self.d1_icon_black) if self.p2_d5.isChecked() else self.p2_d5.setIcon(self.d1_icon_white)
            case 2:   
                self.p2_d5.setIcon(self.d2_icon_black) if self.p2_d5.isChecked() else self.p2_d5.setIcon(self.d2_icon_white)
            case 3:    
                self.p2_d5.setIcon(self.d3_icon_black) if self.p2_d5.isChecked() else self.p2_d5.setIcon(self.d3_icon_white)
            case 4:   
                self.p2_d5.setIcon(self.d4_icon_black) if self.p2_d5.isChecked() else self.p2_d5.setIcon(self.d4_icon_white)
            case 5:     
                self.p2_d5.setIcon(self.d5_icon_black) if self.p2_d5.isChecked() else self.p2_d5.setIcon(self.d5_icon_white)
            case 6:     
                self.p2_d5.setIcon(self.d6_icon_black) if self.p2_d5.isChecked() else self.p2_d5.setIcon(self.d6_icon_white)

    
    # Funkce VyhodnocenÌ rundy
    def fn_end_round(self):
        if self.p1 > self.p2:
            winner = f"Vyhral {self.p1_labelName.text()}"
            self.p1_score += 1
        elif self.p1 < self.p2:
            winner = f"Vyhral {self.p2_labelName.text()}"
            self.p2_score += 1

        else:
            winner = "Plichta"
            print("plichta")
            self.p1_score += 1
            self.p2_score += 1

        self.score.setText(f"{self.p1_score} : {self.p2_score}")
        self.announcement.setText(f"Nove kostky hrace '{self.p2_labelName.text()}' jsou: {self.p2.dices[0]}, {self.p2.dices[1]}, {self.p2.dices[2]}, {self.p2.dices[3]} a {self.p2.dices[4]} - {winner}")

        self.p1_rollDices.setEnabled(True)
        self.p1_rollDices.setText("Dalsi runda")
        self.p1_rollDices.clicked.disconnect()
        self.p1_rollDices.clicked.connect(self.fn_newRound)

    # Sign·l Nov· runda
    def fn_newRound(self):
        # Reset 
        self.p1_rolledDices, self.p2_rolledDices = False, False
        self.p1_d1.setChecked(False)
        self.p1_d2.setChecked(False)
        self.p1_d3.setChecked(False)
        self.p1_d4.setChecked(False)
        self.p1_d5.setChecked(False)
        self.p2_d1.setChecked(False)
        self.p2_d2.setChecked(False)
        self.p2_d3.setChecked(False)
        self.p2_d4.setChecked(False)
        self.p2_d5.setChecked(False)
        
        self.p1_d1.setIcon(self.blank_icon)
        self.p1_d2.setIcon(self.blank_icon)
        self.p1_d3.setIcon(self.blank_icon)
        self.p1_d4.setIcon(self.blank_icon)
        self.p1_d5.setIcon(self.blank_icon)

        self.p2_d1.setIcon(self.blank_icon)
        self.p2_d2.setIcon(self.blank_icon)
        self.p2_d3.setIcon(self.blank_icon)
        self.p2_d4.setIcon(self.blank_icon)
        self.p2_d5.setIcon(self.blank_icon)

        self.p1_labelStrength.setText("Hand strength: ")
        self.p2_labelStrength.setText("Hand strength: ")

        # Ozn·menÌ
        self.announcement.setText(f"Zacala nova runda, haze {self.p1_labelName.text()}")

        # P¯epnutÌ funkce tlaËÌtka p1_rollDices
        self.p1_rollDices.clicked.disconnect()
        self.p1_rollDices.setText("Hodit kostky")
        self.p1_rollDices.clicked.connect(self.fn_p1_rollDices)

        self.fn_playSound1()

    # Sign·l P¯ejmenovat hr·Ëe 1
    def fn_p1_rename(self):
        string, ok = QtWidgets.QInputDialog.getText(QtWidgets.QDialog(), "Pokerove Kostky", "Zadejte nove jmeno hrace 1: ", QtWidgets.QLineEdit.Normal, "")
        if ok and string != '':
            self.p1_labelName.setText(string)
    
    # Sign·l P¯ejmenovat hr·Ëe 2
    def fn_p2_rename(self):
        string, ok = QtWidgets.QInputDialog.getText(QtWidgets.QDialog(), "Pokerove Kostky", "Zadejte nove jmeno hrace 2: ", QtWidgets.QLineEdit.Normal, "")
        if ok and string != '':
            self.p2_labelName.setText(string)

    # Sin·l PoËÌtaË je vybr·n jako druh˝ hr·Ë
    def fn_computerCheck(self):
        if self.actionDruhy_hrac_je_pocitac.isChecked():
            self.menuDifficulty.setEnabled(True)
            self.actionZmenit_jmeno_hrace_2.setEnabled(False)
            self.p2_labelName.setText("Computer")
        else:
            self.menuDifficulty.setEnabled(False)
            self.actionZmenit_jmeno_hrace_2.setEnabled(True)

    # Sign·l Otev¯Ìt pravidla
    def fn_rules(self):
        webbrowser.open("http://localhost:5000/")

    # Funke PoËÌtaË hraje/h·ûe
    def fn_hraje_pocitac(self):
        if self.actionDruhy_hrac_je_pocitac.isChecked() and self.p2_rollDices.isEnabled():
            print("ted haze comp")
            self.p2_rollDices.setEnabled(False)
            #time.sleep(0.5)

            if not self.p2_rolledDices:
                self.fn_p2_rollDices()
            
            else:
                if self.difficulty == 1:  # Obitiznost = easy
                    self.fn_p2_rollDices(kostky=[bool(random.getrandbits(1)) for i in range(5)])

                elif self.difficulty == 2:  # Obitiznost = normal
                    self.fn_p2_rollDices(kostky=self.computer_normalDiffPlay())

                elif self.difficulty == 3:  # Obitiznost = hard
                    self.fn_p2_rollDices(kostky=self.p2.get_strengthPositions())

                else:  # Obitiznost = AI
                    pass
    
    # Inteligence poËÌtaËe - obtÌûnost Normal
    def computer_normalDiffPlay(self):
        kostky=self.p2.get_strengthPositions()
        
        for i, kostka in enumerate(kostky):
            if bool(random.getrandbits(1)) and kostka:
                kostky[i] = False

        return kostky

    # Sign·l P¯epnutÌ obtÌûnosti
    def fn_setDifficulty(self, diff):
        self.difficulty = diff
        print(f"Difficulty set to {self.difficulty}")

    # Funkce Konec
    def fn_exit(self):
        self.fn_saveSettings()
        QtWidgets.QApplication.quit()
        
    # Funkce Uloûit nastavenÌ
    def fn_saveSettings(self):
        print("saving...")
        settings = {"p1Name": self.p1_labelName.text(),
                    "2ndPlayerIsBot": self.actionDruhy_hrac_je_pocitac.isChecked(),
                    "difficulty": self.difficulty,
                    "soundON": self.actionSound.isChecked(),
                    "musicON": self.actionMusic.isChecked()}

        with open('config', 'wb') as f:
            pickle.dump(settings, f, pickle.HIGHEST_PROTOCOL)

    # Funkce NaËÌst nastavenÌ
    def fn_loadSettings(self):
        with open('config', 'rb') as f:
            return pickle.load(f)

    # Funkce P¯ehr·t zvuk
    def fn_playSound1(self):
        if self.actionSound.isChecked(): 
            QtMultimedia.QSound.play('sounds/sound1.wav')

    # Funkce P¯ehr·t musiku
    def fn_playMusic1(self):
        self.musicPlayer = QtMultimedia.QSound('sounds/music1.wav')

        if self.actionMusic.isChecked():
            self.musicPlayer.play()
            self.musicPlayer.setLoops(QtMultimedia.QSound.Infinite)
        else:
            self.musicPlayer.stop()






if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
